From 22f4d33d016823ea78496670cf9958e1711db3c4 Mon Sep 17 00:00:00 2001
From: Laszlo Ersek <lersek@redhat.com>
Date: Fri, 5 May 2017 20:24:12 +0200
Subject: [PATCH 01/10] OvmfPkg/EnrollDefaultKeys: update SignatureOwner GUID
 for Windows HCK (RH)

Message-id: <20170505182421.19670-2-lersek@redhat.com>
Patchwork-id: 75031
O-Subject:  [RHEL-7.4 ovmf PATCH v2 01/10] OvmfPkg/EnrollDefaultKeys: update
	SignatureOwner GUID for Windows HCK (RH)
Bugzilla: 1443351
Acked-by: Paolo Bonzini <pbonzini@redhat.com>
Acked-by: Vitaly Kuznetsov <vkuznets@redhat.com>
Acked-by: Miroslav Rezanina <mrezanin@redhat.com>

The following test cases of the Secure Boot Logo Test in the Microsoft
Hardware Certification Kit:

- Microsoft.UefiSecureBootLogo.Tests.OutOfBoxVerifyMicrosoftKEKpresent
- Microsoft.UefiSecureBootLogo.Tests.OutOfBoxConfirmMicrosoftSignatureInDB

expect the EFI_SIGNATURE_DATA.SignatureOwner GUID to be
77FA9ABD-0359-4D32-BD60-28F4E78F784B, when the
EFI_SIGNATURE_DATA.SignatureData field carries any of the following X509
certificates:

- "Microsoft Corporation KEK CA 2011" (in KEK)
- "Microsoft Windows Production PCA 2011" (in db)
- "Microsoft Corporation UEFI CA 2011" (in db)

This is despite the fact that the UEFI specification requires
EFI_SIGNATURE_DATA.SignatureOwner to reflect the agent (i.e., OS,
application or driver) that enrolled and therefore owns
EFI_SIGNATURE_DATA.SignatureData, and not the organization that issued
EFI_SIGNATURE_DATA.SignatureData.

Introduce mMicrosoftOwnerGuid and pass it to EnrollListOfX509Certs() in
place of gEfiCallerIdGuid wherever appropriate.

Contributed-under: TianoCore Contribution Agreement 1.0
Signed-off-by: Laszlo Ersek <lersek@redhat.com>

RHEL-7 port notes:

- Upstream status: N/A, EnrollDefaultKeys.efi is downstream only.

- This patch has a small context difference relative to the one I attached
  to the RHBZ in <https://bugzilla.redhat.com/show_bug.cgi?id=1443351#c31>
  for Fedora's and Gerd's packages. Namely, those packages use an
  "ExampleCert" rather than "RedHatPkKek1", as Platform Key and first Key
  Exchange Key.

Signed-off-by: Laszlo Ersek <lersek@redhat.com>
---
 OvmfPkg/EnrollDefaultKeys/EnrollDefaultKeys.c | 33 ++++++++++++++++++++++++---
 1 file changed, 30 insertions(+), 3 deletions(-)

diff --git a/OvmfPkg/EnrollDefaultKeys/EnrollDefaultKeys.c b/OvmfPkg/EnrollDefaultKeys/EnrollDefaultKeys.c
index 0dd485e..0408591 100644
--- a/OvmfPkg/EnrollDefaultKeys/EnrollDefaultKeys.c
+++ b/OvmfPkg/EnrollDefaultKeys/EnrollDefaultKeys.c
@@ -485,6 +485,33 @@ STATIC CONST UINT8 MicrosoftUefiCA[] = {
 };
 
 //
+// The following test cases of the Secure Boot Logo Test in the Microsoft
+// Hardware Certification Kit:
+//
+// - Microsoft.UefiSecureBootLogo.Tests.OutOfBoxVerifyMicrosoftKEKpresent
+// - Microsoft.UefiSecureBootLogo.Tests.OutOfBoxConfirmMicrosoftSignatureInDB
+//
+// expect the EFI_SIGNATURE_DATA.SignatureOwner GUID to be
+// 77FA9ABD-0359-4D32-BD60-28F4E78F784B, when the
+// EFI_SIGNATURE_DATA.SignatureData field carries any of the following X509
+// certificates:
+//
+// - "Microsoft Corporation KEK CA 2011" (in KEK)
+// - "Microsoft Windows Production PCA 2011" (in db)
+// - "Microsoft Corporation UEFI CA 2011" (in db)
+//
+// This is despite the fact that the UEFI specification requires
+// EFI_SIGNATURE_DATA.SignatureOwner to reflect the agent (i.e., OS,
+// application or driver) that enrolled and therefore owns
+// EFI_SIGNATURE_DATA.SignatureData, and not the organization that issued
+// EFI_SIGNATURE_DATA.SignatureData.
+//
+STATIC CONST EFI_GUID mMicrosoftOwnerGuid = {
+  0x77fa9abd, 0x0359, 0x4d32,
+  { 0xbd, 0x60, 0x28, 0xf4, 0xe7, 0x8f, 0x78, 0x4b },
+};
+
+//
 // The most important thing about the variable payload is that it is a list of
 // lists, where the element size of any given *inner* list is constant.
 //
@@ -877,8 +904,8 @@ ShellAppMain (
   Status = EnrollListOfX509Certs (
              EFI_IMAGE_SECURITY_DATABASE,
              &gEfiImageSecurityDatabaseGuid,
-             MicrosoftPCA,    sizeof MicrosoftPCA,    &gEfiCallerIdGuid,
-             MicrosoftUefiCA, sizeof MicrosoftUefiCA, &gEfiCallerIdGuid,
+             MicrosoftPCA,    sizeof MicrosoftPCA,    &mMicrosoftOwnerGuid,
+             MicrosoftUefiCA, sizeof MicrosoftUefiCA, &mMicrosoftOwnerGuid,
              NULL);
   if (EFI_ERROR (Status)) {
     return 1;
@@ -888,7 +915,7 @@ ShellAppMain (
              EFI_KEY_EXCHANGE_KEY_NAME,
              &gEfiGlobalVariableGuid,
              RedHatPkKek1, sizeof RedHatPkKek1, &gEfiCallerIdGuid,
-             MicrosoftKEK, sizeof MicrosoftKEK, &gEfiCallerIdGuid,
+             MicrosoftKEK, sizeof MicrosoftKEK, &mMicrosoftOwnerGuid,
              NULL);
   if (EFI_ERROR (Status)) {
     return 1;
-- 
1.8.3.1

